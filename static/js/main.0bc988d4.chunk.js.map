{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","React","memo","todos","selectedTodo","onTodoSelect","className","map","todo","id","title","completed","isSelectedTodo","cn","type","onClick","TodoFilter","setInputValue","inputValue","option","setOption","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","handleModalClose","useState","user","setUser","isUserLoading","setIsUserLoading","useEffect","userId","data","catch","error","finally","href","email","name","App","setSelectedTodo","setTodos","isLoading","setIsLoading","visibleTodos","filter","input","toLowerCase","includes","trim","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0bc988d4.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onTodoSelect: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = React.memo(({\n  todos,\n  selectedTodo,\n  onTodoSelect,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {\n          todos.map(todo => {\n            const {\n              id,\n              title,\n              completed,\n            } = todo;\n\n            const isSelectedTodo = todo.id === selectedTodo?.id;\n\n            return (\n              <tr\n                data-cy=\"todo\"\n                className={cn({ 'has-background-info-light': isSelectedTodo })}\n                key={id}\n              >\n                <td className=\"is-vcentered\">{id}</td>\n                <td className=\"is-vcentered\">\n                  {completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p className={completed\n                    ? 'has-text-success'\n                    : 'has-text-danger'}\n                  >\n                    {title}\n                  </p>\n                </td>\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => onTodoSelect(todo)}\n                  >\n                    <span className=\"icon\">\n                      <i className={`far fa-eye${isSelectedTodo ? '-slash' : ''}`} />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            );\n          })\n        }\n      </tbody>\n    </table>\n  );\n});\n","import React from 'react';\n\ntype Props = {\n  setInputValue: (inputValue: string) => void;\n  inputValue: string;\n  option: string;\n  setOption: (option: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setInputValue,\n  inputValue,\n  option,\n  setOption,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={option}\n          onChange={(event) => setOption(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={inputValue}\n        onChange={event => setInputValue(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {inputValue && (\n          /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setInputValue('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo;\n  handleModalClose: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  handleModalClose,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isUserLoading, setIsUserLoading] = useState(true);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId)\n      .then((data) => {\n        setUser(data);\n      })\n      .catch(error => `Get user data: ${error}`)\n      .finally(() => setIsUserLoading(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isUserLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleModalClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={user?.email}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [inputValue, setInputValue] = useState('');\n  const [option, setOption] = useState('all');\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos)\n      .catch(error => `${error} error in TODO's data`)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const handleModalClose = () => {\n    setSelectedTodo(null);\n  };\n\n  const visibleTodos = todos.filter(todo => {\n    const input = todo.title.toLowerCase().includes(inputValue.toLowerCase().trim());\n\n    switch (option) {\n      case 'active':\n        return input && !todo.completed;\n      case 'completed':\n        return input && todo.completed;\n      default:\n        return input;\n    }\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setInputValue={setInputValue}\n                inputValue={inputValue}\n                option={option}\n                setOption={setOption}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              <TodoList\n                todos={visibleTodos}\n                selectedTodo={selectedTodo}\n                onTodoSelect={setSelectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal selectedTodo={selectedTodo} handleModalClose={handleModalClose} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}